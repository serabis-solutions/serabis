#!/usr/bin/env perl
use strict;
use warnings;

my $interfaces = {};
my $basename_reg = qr|.*/(.+)|;

for my $interface_dir ( </sys/class/net/*> ) {
    my ( $interface ) = ( $interface_dir =~ m/$basename_reg/ );

    $interfaces->{ $interface } = {};

    for my $stat_file ( <$interface_dir/statistics/*> ) {
        open my $fh, '<', $stat_file;
        my $stat_value = <$fh>;
        chomp $stat_value;

        my ( $stat ) = ( $stat_file =~ m/$basename_reg/ );

        $interfaces->{ $interface }->{ $stat } = $stat_value;
    }
}
print to_json( $interfaces ), "\n";




#XXX make a library + test
#minimal - not to spec, but just enough
sub to_json {
    my $value = shift;

    my $ref = ref $value;
    if ( !$ref ) {
        if ( !defined( $value ) ) {
            return 'null'
        }
        elsif ( $value =~ m/^\d+$/ ) {
            return $value
        }
        else {
            #doesn't handle " or \
            return qq/"$value"/
        }
    }
    elsif ( $ref eq 'HASH' ) {
        my @stack;
        foreach my $key ( keys %$value ) {
            my $value = to_json( $value->{$key} );
            push @stack, qq/"$key" : $value/;
        }
        return "{" . (join ', ', @stack) . "}"
    }
    elsif ( $ref eq 'ARRAY' ) {
        my @stack;
        foreach my $value ( @$value ) {
            push @stack, to_json( $value );
        }
        return "[" . (join ', ', @stack) . "]"
    }
}
